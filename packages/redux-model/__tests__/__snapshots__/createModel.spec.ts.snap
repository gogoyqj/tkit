// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`utils/createModel work ok check sample/testCreateModelFail.ts work ok 1`] = `
Array [
  Object {
    "category": 1,
    "code": 2322,
    "fileName": "createModelSamples/testCreateModelFail.ts",
    "messageText": "Type 'string' is not assignable to type 'number'.",
  },
  Object {
    "category": 1,
    "code": 2322,
    "fileName": "createModelSamples/testCreateModelFail.ts",
    "messageText": "Type '<P extends AbstractAction>(state: Readonly<State>, action: Tction<string>) => { id: string; name: string; }' is not assignable to type '<P extends AbstractAction>(state: Readonly<State>, action: P) => State'.
  Call signature return types '{ id: string; name: string; }' and 'State' are incompatible.
    The types of 'id' are incompatible between these types.
      Type 'string' is not assignable to type 'number'.",
  },
  Object {
    "category": 1,
    "code": 2322,
    "fileName": "createModelSamples/testCreateModelFail.ts",
    "messageText": "Type '<P extends AbstractAction>(state: Readonly<State>, action: Tction<{ user: { id: string; }; }>) => { id: string; name: string; }' is not assignable to type '<P extends AbstractAction>(state: Readonly<State>, action: P) => State'.
  Call signature return types '{ id: string; name: string; }' and 'State' are incompatible.
    The types of 'id' are incompatible between these types.
      Type 'string' is not assignable to type 'number'.",
  },
  Object {
    "category": 1,
    "code": 2322,
    "fileName": "createModelSamples/testCreateModelFail.ts",
    "messageText": "Type 'number' is not assignable to type 'string'.",
  },
  Object {
    "category": 1,
    "code": 2322,
    "fileName": "createModelSamples/testCreateModelFail.ts",
    "messageText": "Type '<P extends AbstractAction>(state: Readonly<State>, action: Tction<number>) => { name: number; id: number; }' is not assignable to type '<P extends AbstractAction>(state: Readonly<State>, action: P) => State'.
  Call signature return types '{ name: number; id: number; }' and 'State' are incompatible.
    The types of 'name' are incompatible between these types.
      Type 'number' is not assignable to type 'string'.",
  },
  Object {
    "category": 1,
    "code": 2322,
    "fileName": "createModelSamples/testCreateModelFail.ts",
    "messageText": "Type '<P extends AbstractAction>(state: Readonly<State>, action: Tction<{ user: { name: number; }; }>) => { name: number; id: number; }' is not assignable to type '<P extends AbstractAction>(state: Readonly<State>, action: P) => State'.
  Call signature return types '{ name: number; id: number; }' and 'State' are incompatible.
    The types of 'name' are incompatible between these types.
      Type 'number' is not assignable to type 'string'.",
  },
]
`;

exports[`utils/createModel work ok check sample/testCreateModelOK.ts work ok 1`] = `Array []`;

exports[`utils/createModel work ok check sample/testCreateModelStateReadOnlyFail.ts work ok 1`] = `
Array [
  Object {
    "category": 1,
    "code": 2540,
    "fileName": "createModelSamples/testCreateModelStateReadOnlyFail.ts",
    "messageText": "Cannot assign to 'id' because it is a read-only property.",
  },
]
`;

exports[`utils/createModel work ok check sample/testCreateModelStateReadOnlyOK.ts work ok 1`] = `Array []`;

exports[`utils/createModel work ok check sample/testCreateModelTYPESFail.ts work ok 1`] = `
Array [
  Object {
    "category": 1,
    "code": 2339,
    "fileName": "createModelSamples/testCreateModelTYPESFail.ts",
    "messageText": "Property 'a' does not exist on type '{ testNoArguments: string; testOneArguments: string; } & { testAsyncNoArguments: string; testAsyncOneArguments: string; }'.",
  },
]
`;

exports[`utils/createModel work ok check sample/testCreateModelTYPESOK.ts work ok 1`] = `Array []`;

exports[`utils/createModel work ok check sample/testPutCallInModelFail.ts work ok 1`] = `
Array [
  Object {
    "category": 1,
    "code": 2345,
    "fileName": "createModelSamples/testPutCallInModelFail.ts",
    "messageText": "Argument of type '\\"\\"' is not assignable to parameter of type 'never'.",
  },
  Object {
    "category": 1,
    "code": 2345,
    "fileName": "createModelSamples/testPutCallInModelFail.ts",
    "messageText": "Argument of type '<P_1 extends Tction<string>>(payload: P_1[\\"payload\\"]) => P_1' is not assignable to parameter of type 'string | (() => any) | Tction<any>'.
  Type '<P_1 extends Tction<string>>(payload: P_1[\\"payload\\"]) => P_1' is not assignable to type '() => any'.",
  },
]
`;

exports[`utils/createModel work ok check sample/testPutCallInModelOK.ts work ok 1`] = `Array []`;

exports[`utils/createModel work ok check sample/testPutCallOutModelFail.ts work ok 1`] = `
Array [
  Object {
    "category": 1,
    "code": 2345,
    "fileName": "createModelSamples/testPutCallOutModelFail.ts",
    "messageText": "Argument of type '\\"\\"' is not assignable to parameter of type 'never'.",
  },
  Object {
    "category": 1,
    "code": 2345,
    "fileName": "createModelSamples/testPutCallOutModelFail.ts",
    "messageText": "Argument of type '\\"\\"' is not assignable to parameter of type 'never'.",
  },
  Object {
    "category": 1,
    "code": 2345,
    "fileName": "createModelSamples/testPutCallOutModelFail.ts",
    "messageText": "Argument of type '<P extends Tction<string>>(payload: P[\\"payload\\"]) => P' is not assignable to parameter of type 'string | (() => any) | Tction<any>'.
  Type '<P extends Tction<string>>(payload: P[\\"payload\\"]) => P' is not assignable to type '() => any'.",
  },
  Object {
    "category": 1,
    "code": 2345,
    "fileName": "createModelSamples/testPutCallOutModelFail.ts",
    "messageText": "Argument of type '<P extends Tction<string>>(payload: P[\\"payload\\"]) => P' is not assignable to parameter of type '() => any'.",
  },
]
`;

exports[`utils/createModel work ok check sample/testPutCallOutModelOK.ts work ok 1`] = `Array []`;

exports[`utils/createModel work ok check sample/testPutCallWithOverloadFail.ts work ok 1`] = `
Array [
  Object {
    "category": 1,
    "code": 2345,
    "fileName": "createModelSamples/testPutCallWithOverloadFail.ts",
    "messageText": "Argument of type '2' is not assignable to parameter of type 'string'.",
  },
  Object {
    "category": 1,
    "code": 2345,
    "fileName": "createModelSamples/testPutCallWithOverloadFail.ts",
    "messageText": "Argument of type '2' is not assignable to parameter of type 'string'.",
  },
  Object {
    "category": 1,
    "code": 2345,
    "fileName": "createModelSamples/testPutCallWithOverloadFail.ts",
    "messageText": "Argument of type '\\"\\"' is not assignable to parameter of type 'number'.",
  },
  Object {
    "category": 1,
    "code": 2345,
    "fileName": "createModelSamples/testPutCallWithOverloadFail.ts",
    "messageText": "Argument of type '2' is not assignable to parameter of type 'string'.",
  },
]
`;

exports[`utils/createModel work ok check sample/testPutCallWithOverloadOK.ts work ok 1`] = `Array []`;

exports[`utils/createModel work ok check sample/testWithEffectsPutAndCallFail.ts work ok 1`] = `
Array [
  Object {
    "category": 1,
    "code": 2345,
    "fileName": "createModelSamples/testWithEffectsPutAndCallFail.ts",
    "messageText": "Argument of type '\\"\\"' is not assignable to parameter of type 'never'.",
  },
  Object {
    "category": 1,
    "code": 2345,
    "fileName": "createModelSamples/testWithEffectsPutAndCallFail.ts",
    "messageText": "Argument of type '\\"\\"' is not assignable to parameter of type 'never'.",
  },
  Object {
    "category": 1,
    "code": 2554,
    "fileName": "createModelSamples/testWithEffectsPutAndCallFail.ts",
    "messageText": "Expected 2 arguments, but got 3.",
  },
  Object {
    "category": 1,
    "code": 2554,
    "fileName": "createModelSamples/testWithEffectsPutAndCallFail.ts",
    "messageText": "Expected 2 arguments, but got 3.",
  },
]
`;

exports[`utils/createModel work ok check sample/testWithEffectsPutAndCallOK.ts work ok 1`] = `Array []`;
